#!/bin/bash -x
which kubectl || sudo snap install kubectl --classic
mkdir -p ~/.kube

if ((`juju status --format=json| jq -r '.applications[]| select(."charm-name"=="k8s")'| wc -l`)); then
    juju run k8s/0 get-kubeconfig| yq .kubeconfig > ~/.kube/config
else
    kubecontrolplane_unit=$(juju status| sed -nr 's,(kubernetes-control-plane/[[:digit:]]+)\*.*,\1,p')
    ftmp=`mktemp -p .`
    juju scp ${kubecontrolplane_unit}:config $ftmp 
    mv ./$ftmp ~/.kube/config
fi

# If we're using keystone, let's create the user and setup everything
if [[ `juju status keystone --format=json 2>/dev/null| jq '.machines| length'` -ne 0 ]] ; then
    # We need to expose keystone first
    # NOTE: no HA support yet. Remember to query for vip whenever/if HA support is added
    keystone_addr=`juju status keystone --format=json 2>/dev/null| jq -r '.applications.keystone.units."keystone/0"."public-address"'`
    juju expose keystone
    while ! nc -z -w 1 ${keystone_addr} 5000; do
        echo "Waiting for keystone api port 5000 to open"
    done
    source novarc
    openstack domain create k8s
    openstack role create k8s-admins
    openstack project create --domain k8s k8s
    openstack user create --project-domain k8s --project k8s --domain k8s --password kubernetes k8s-admin
    openstack role add --user k8s-admin --user-domain k8s --project k8s --project-domain k8s k8s-admins
    source novarc_unset_all

    which client-keystone-auth || sudo snap install --edge client-keystone-auth

    juju scp ${kubecontrolplane_unit}:kube-keystone.sh .
    chmod a+w kube-keystone.sh
    sed -i 's/#export OS_PROJECT_NAME=k8s/export OS_PROJECT_NAME=k8s/g' kube-keystone.sh
    sed -i 's/#export OS_DOMAIN_NAME=k8s/export OS_DOMAIN_NAME=k8s/g' kube-keystone.sh
    sed -i 's/#export OS_USERNAME=myuser/export OS_USERNAME=k8s-admin/g' kube-keystone.sh
    sed -i 's/#export OS_PASSWORD=secure_pw/export OS_PASSWORD=kubernetes/g' kube-keystone.sh
    source kube-keystone.sh
fi

kubectl --namespace kube-system get pods
