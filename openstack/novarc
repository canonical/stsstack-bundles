#!/bin/bash -eu
# This script can be sourced from both Bash and Zsh shells.
# When updating please make sure not to use either Bash
# or Zsh specific features!

juju_status_json_cache=`mktemp`
cleanup () { rm -rf $juju_status_json_cache; }
trap cleanup EXIT KILL

scriptdir=$(readlink --canonicalize $(dirname ${BASH_SOURCE[0]-$0}))

# cache juju status
juju status --format=json >| $juju_status_json_cache

_OS_PARAMS=($(env | awk 'BEGIN {FS="="} /^OS_/ {print $1;}'))
for param in ${_OS_PARAMS[@]}; do
    unset $param
done

keystone_addr=`juju config keystone vip`
if [ -z "$keystone_addr" ]; then
    keystone_addr=$(jq --raw-output '.applications.keystone.units[] | select (.leader == true) | .["public-address"]' $juju_status_json_cache)
fi

# check config-based ssl first
if [ -n "`juju config keystone ssl_cert`" ]; then
    export OS_AUTH_PROTOCOL=https
elif ((`jq -r '.applications[]| select(."charm-name"=="vault")' $juju_status_json_cache| wc -l`)); then
    # Vault-based ssl
    if `jq -r '.applications.vault.relations.certificates[]' $juju_status_json_cache| grep -q keystone`; then
        VAULT_STATUS=( $(juju status vault --format=json | jq -r '.applications.vault.units."vault/0"."workload-status" | .current,.message') )
        if [[ "${VAULT_STATUS[0]}" == "blocked" && "${VAULT_STATUS[1]}" == "Vault needs to be initialized" ]]; then
            read -p "$(cat <<-END
This deployment is using vault-based ssl certificates
but the vault seems to be not initialized yet.
It is recommended to initialize it via running
./tools/vault-unseal-and-authorise.sh before doing anything else.
Do you want to proceed anyway? (y/n):
END
)" yn
            case $yn in
                [nN] ) echo "exiting...";
                    return;;
            esac
        fi
    fi
    export OS_AUTH_PROTOCOL=https
else
    unset OS_AUTH_PROTOCOL
fi

if [ "${OS_AUTH_PROTOCOL:-}" = "https" ]; then
    echo -n "INFO: installing certificate authority for this deployment..."
    ${scriptdir}/tools/install_local_ca.sh 1>/dev/null
    echo done.
fi

unset _OS_PARAMS

# If user was specified use it
if [[ $# -gt 1 && $1 = --service ]]; then
    RELATION_ID=$(juju run --unit $2/leader -- relation-ids identity-service | cut -d : -f 2)
    CREDENTIALS=( $(juju run --unit $2/leader -- relation-get --relation ${RELATION_ID} --format json - keystone/0) )

    export OS_USERNAME=$(echo ${CREDENTIALS} | jq --raw-output .service_username)
    export OS_USER_DOMAIN_NAME=$(echo ${CREDENTIALS} | jq --raw-output .service_domain)
    export OS_PROJECT_NAME=$(echo ${CREDENTIALS} | jq --raw-output .service_tenant)
    export OS_PROJECT_DOMAIN_NAME=$(echo ${CREDENTIALS} | jq --raw-output .service_domain)
    export OS_PASSWORD=$(echo ${CREDENTIALS} | jq --raw-output .service_password)
else
    export OS_USERNAME=admin
    export OS_USER_DOMAIN_NAME=admin_domain
    export OS_PROJECT_NAME=admin
    export OS_PROJECT_DOMAIN_NAME=admin_domain

    # if the admin password is not set in the configuration, then it's read
    # from the leader databag.
    _CONFIG_PASSWD="$(juju config keystone admin-password| awk '{print tolower($0)}')"
    if [[ "${_CONFIG_PASSWD}" == "none" ]] || [[ "${_CONFIG_PASSWD}" == "" ]]; then
        export OS_PASSWORD=$(juju run -u keystone/leader leader-get admin_passwd)
    else
    export OS_PASSWORD="$(juju config keystone admin-password)"
    fi
fi
export OS_REGION_NAME=RegionOne

api_ver="`juju config keystone preferred-api-version`"
rel="`juju config keystone openstack-origin| sed -r 's/.+-(.+)/\1/g'`"
rel="`echo -e "$rel\nqueens"| sort| head -n 1`"
series=`jq -r '.applications| to_entries[]| select(.key=="keystone")| .value| .series' $juju_status_json_cache`
if [ "$api_ver" = "3" ] || [[ "${rel%%/*}" > "pike" ]] || \
    { [[ "$series" > "artful" ]] && [[ "$series" < "trusty" ]]; }; then
    export OS_AUTH_URL=${OS_AUTH_PROTOCOL:-http}://${keystone_addr}:5000/v3
    export OS_IDENTITY_API_VERSION=3
    # Gnocchi needs this:
    export OS_AUTH_TYPE=password
else
    export OS_AUTH_URL=${OS_AUTH_PROTOCOL:-http}://${keystone_addr}:5000/v2.0
    # Pike fix
    unset OS_PROJECT_DOMAIN_NAME
    unset OS_USER_DOMAIN_NAME
fi
