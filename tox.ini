# This is a templated file and must be kept up-to-date with the original
# from upstream at https://github.com/canonical/se-tooling-ci-common.
[tox]
skipsdist = True
envlist = bashate,pep8,pylint
minversion = 3.18.0

[flake8]
# H106: Don't put vim configuration in source files
# H203: Use assertIs(Not)None to check for None
# H204: Use assert(Not)Equal to check for equality
# H205: Use assert(Greater|Less)(Equal) for comparison
# H904: Delay string interpolations at logging calls
enable-extensions = H106,H203,H204,H205,H904
show-source = true
exclude =
import-order-style = pep8

[testenv]
basepython = {env:TOX_PYTHON:python3}
pyfiles =
    {toxinidir}/openstack/tools/func_test_tools
    {toxinidir}/tools/parse-bundle.py
    {toxinidir}/tools/juju-bundle-applications.py

bashfiles =
    {toxinidir}/tools/juju-lnav
    # find tools -name \*.sh
    {toxinidir}/tools/vault-unseal-and-authorise.sh
    {toxinidir}/tools/mongo-access.sh
    {toxinidir}/tools/lint-git-messages.sh
    {toxinidir}/tools/model-poweron.sh
    {toxinidir}/tools/stack-manager/mark-model-vms-unmanaged.sh
    {toxinidir}/tools/stack-manager/show-all.sh
    {toxinidir}/tools/stack-manager/common.sh
    {toxinidir}/tools/stack-manager/show-unmanaged.sh
    {toxinidir}/tools/stack-manager/mark-vms-unmanaged.sh
    {toxinidir}/tools/stack-manager/mark-vms-managed.sh
    {toxinidir}/tools/stack-manager/mark-model-vms-managed.sh
    {toxinidir}/tools/stack-manager/show-managed.sh
    {toxinidir}/tools/model-poweroff.sh

    {toxinidir}/common/generate_bundle_base
    # find common -name \*.sh
    {toxinidir}/common/ch_channel_map/test-channel-map.sh
    {toxinidir}/common/ch_channel_map/test-all.sh
    {toxinidir}/common/generate-bundle.sh

    {toxinidir}/openstack/novarc
    # find openstack/tools/ -name \*.sh| xargs -I{} echo "    {toxinidir}/{}"
    {toxinidir}/openstack/tools/func_test_tools/manual_functests_runner.sh
    {toxinidir}/openstack/tools/func_test_tools/common.sh
    {toxinidir}/openstack/tools/create_octavia_lb.sh
    {toxinidir}/openstack/tools/float_all.sh
    {toxinidir}/openstack/tools/vault-unseal-and-authorise.sh
    {toxinidir}/openstack/tools/install_local_ca.sh
    {toxinidir}/openstack/tools/create_nova_az_aggregates.sh
    {toxinidir}/openstack/tools/enable_samltestid.sh
    {toxinidir}/openstack/tools/delete_project.sh
    {toxinidir}/openstack/tools/charmed_openstack_functest_runner.sh
    {toxinidir}/openstack/tools/create_ipv4_octavia.sh
    {toxinidir}/openstack/tools/configure_octavia.sh
    {toxinidir}/openstack/tools/create_sg_log.sh
    {toxinidir}/openstack/tools/setup_tempest.sh
    {toxinidir}/openstack/tools/instance_launch.sh
    {toxinidir}/openstack/tools/create_project.sh
    {toxinidir}/openstack/tools/allocate_vips.sh
    {toxinidir}/openstack/tools/upload_octavia_amphora_image.sh
    {toxinidir}/openstack/tools/sec_groups.sh
    {toxinidir}/openstack/tools/create-microceph-vm.sh
    {toxinidir}/openstack/tools/upload_image.sh
    {toxinidir}/openstack/tools/openstack_regression_tests_runner.sh


setenv = 
    PYTHONHASHSEED=0
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

[testenv:pep8]
commands = flake8 -v {posargs:{[testenv]pyfiles}}

[testenv:pylint]
commands = pylint -v --rcfile={toxinidir}/pylintrc {posargs:{[testenv]pyfiles}}

[testenv:bashate]
commands = bashate --ignore E006 --verbose {posargs:{[testenv]bashfiles}}

